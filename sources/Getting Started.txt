
***   GETTING STARTED   ***

1. Project x64
2. Linking libraries (in Debug and/or Release, depending on the type of compilation you want to do)
--> You can follow the instructions on this site:
https://www.wikihow.com/Set-Up-OpenGL%E2%80%90GLFW%E2%80%90GLAD-on-a-Project-with-Visual-Studio

3. Import glad.c into Solution > Resource Files

Debug x64 Compilation creates a compilation version to test your code and perform debugging to fix potential errors.
Release x64 Compilation creates a version of the code ready for public release.

The settings that will be described need to be applied for every OpenGL project created and for each compilation mode (debug and/or release).

---   CREATE AN OPENGL PROJECT WITH VISUAL STUDIO   ---

1. Create a folder that will contain the OpenGL projects with Visual Studio.

2. In the folder of the OpenGL project with Visual Studio, there will be a folder named x64 containing two subfolders: Debug and Release, created depending on the chosen type of compilation.

3. After following the installations of glad, GLFW, and CMake as required by the LearnOpenGL book (these are done only the first time), 
   you proceed to include the files generated by the previous installations in the Visual Studio OpenGL project.

4. Create an empty project in Visual Studio.

5. Go to project properties (right-click on the project name > Properties) --> this is found in the "Solution Explorer" window of the project.

6. Once the project properties are open, select: C/C++ > General > Additional Include Directories --> click on <Edit> in this field. 
   When the dialog box opens, copy and paste the path where the glfw/include folder is located. 
   In our case, we will copy and paste: C:\path\GLFW Source Package\glfw-3.3.2\include

   In the same dialog box, copy and paste the path where the glad/include folder is located. 
   In our case, we will copy and paste: C:\path\glad\include

   In this same folder, the GLM library must be included for OpenGL mathematical operations. 
   Click OK to close the dialog box and click APPLY.

7. In the project properties, select: Linker > General > Additional Library Directories --> click on <Edit> in this field. 
   When the dialog box opens, click on the three-dot icon ... that appears on the right side for each blank row created. 
   By clicking on the three dots, you will be able to choose a directory. We will choose the directory that contains the folder glfw > lib-vc2019. 
   In our case, we will search for the directory: C:\path\GLFW Library for OPENGL\glfw-3.3.2.bin.WIN64\lib-vc2019

   Click OK to close the dialog box and click APPLY.

8. Still under Linker, select: Linker > Input > Additional Dependencies --> click on <Edit> in this field. 
   Copy and paste the following libraries into the dialog box that opens:
	
	opengl32.lib; glfw3.lib; glfw3dll.lib

	Additional Libraries:

	Window.lib
	Shader.lib
	Texture.lib
	Camera.lib
	MyAlgebra.lib
	assimp-vc140-mt.lib
	Mesh.lib
	Model.lib
	Skybox Class.lib
	irrKlang.lib

    Click OK to close the dialog box and click APPLY.

9. Still under Linker, select: Linker > System > Subsystem --> click on the drop-down arrow and select:

	Console(/SUBSYSTEM:CONSOLE)
	Click APPLY.

10. Close the project properties and click in the project Solution Explorer window. 
    Right-click on Resource Files: In the dialog box that appears, select: Add > Existing Item
    Find the file glad.c and add it. 
    In our case, this file is located at: C:\path\glad\src 
    It is important that the glad.c file is in the same folder as glad/include. 
    Put simply, the glad folder should be structured as follows:

	glad/ --> include
              --> src/glad.c
   
    The glad folder must be in the same directory that contains glfw. 
    In our case: C:\Users\path\ --> glad 
                                --> glfw source 
                                --> glfw library

11. Create a new "Demo".cpp file that will contain the OpenGL code you want to write.

12. Include the following headers in the "Demo".cpp file:

	#include <glad/glad.h>
	#include <GLFW/glfw3.h>
	#include <glm/glm.hpp>

13. IMplement your code.


---   GLFW Documentation at the link   ---
https://www.glfw.org/docs/latest/group__init.html#ga317aac130a235ab08c6db0834907d85e

---   OPENGL Documentation at the link   ---
http://docs.gl/gl3/glGenBuffers


---   CREATE A FILE FOR THE VERTEX SHADER IN VISUAL STUDIO   ---

1. Resource Files > Add > New Item > Visual C++ > Code > Header File > File name: VertexShaderCode.glsl --> press Enter.

2. Implement the shader code.


***************************************************************************************************************************


If there are WARNINGS, go to 

Project Properties > C++ > Preprocessor > Preprocessor Definition and enter:

	;_CRT_SECURE_NO_WARNINGS


***************************************************************************************************************************
